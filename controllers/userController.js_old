const User = require("../models/users");

/* GET ALL USERS */
const getAllUsers = async (req, res, next) => {
    const users = await User.find({});

    try {
        res.send(users);
    } catch (error) {
        res.status(500).send(error);
    }
}

/* GET ONE USER */
const getOneUser = (req, res, next) => {
    const id = req.params.id;
    User.findById(id)
        .then(data => {
            if (!data)
                res.status(404).send({ message: "Not found user with id " + id });
            else res.send(data);
        })
        .catch(err => {
            res
                .status(500)
                .send({ message: "Error retrieving user with id=" + id });
        });

}

/* SAVE USER */
const saveUser = async (req, res, next) => {
    const user = new User(req.body);

    try {
        await user.save();
        res.send(user);
    } catch (error) {
        res.status(500).send(error);
    }
}

/* UPDATE USER */
const updateUser = (req, res, next) => {
    if (!req.body) {
        return res.status(400).send({
            message: "User to update can not be empty!"
        });
    }

    const id = req.params.id;

    User.findByIdAndUpdate(id, req.body, { useFindAndModify: false })
        .then(user => {
            if (!user) {
                res.status(404).send({
                    message: `Cannot update user with id=${id}. Maybe user was not found!`
                });
            } else {
                res.send({
                    message: "User was updated successfully."
                });
            }
        })
        .catch(err => {
            res.status(500).send({
                message: "Error updating user with id=" + id
            });
        });
}

/* DELETE USER */
const deleteUser = (req, res, next) => {
    const id = req.params.id;
    User.findByIdAndRemove(id)
        .then(user => {
            if (!user) {
                res.status(404).send({
                    message: `Cannot delete user with id=${id}. Maybe user was not found!`
                });
            } else {
                res.send({
                    message: "User was deleted successfully!"
                });
            }
        })
        .catch(err => {
            res.status(500).send({
                message: "Could not delete user with id=" + id
            });
        });
}

/* DELETE MULTIPLE USERS */
const deleteAllUsers = (req, res, next) => {
    User.deleteMany({})
        .then(data => {
            res.send({
                message: `${data.deletedCount} users were deleted successfully!`
            });
        })
        .catch(err => {
            res.status(500).send({
                message:
                    err.message || "Some error occurred while removing all users."
            });
        });
}

/* FIND MULTIPLE USERS BY CONDITIONS */
const findSomeUsersByConditions = (req, res, next) => {
    User.find({ name: "Nantenaina" })
        .then(data => {
            res.send(data);
        })
        .catch(err => {
            res.status(500).send({
                message:
                    err.message || "Some error occurred while retrieving users."
            });
        });
}

module.exports = {getAllUsers, getOneUser, saveUser, updateUser, deleteUser, deleteAllUsers, findSomeUsersByConditions}